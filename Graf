class Graf{
  int x;
  int y;
  int w;
  int h;
  float[] data_s;
  float[] data_s_map;
  int i1=0;
  float refe=0.0;
  float val_aux;

Graf(int x_,int y_,int w_,int h_){
  x=x_;
  y=y_;
  w=w_;
  data_s=new float[w];
  data_s_map=new float[w];
  h=h_;
}
void draw_graf(){
  draw_box();
  draw_data();
  draw_ejes();
  draw_key();
}
void draw_box(){
  noStroke();
  fill(255);
  rect(x,y,w,h);
  
}
void draw_ejes(){
  // Eje x
  noStroke();
  fill(255);
  rect(0,y-10,w,10);
  stroke(0);
  line(x,y+h/2,w,y+h/2);
  textAlign(LEFT,BOTTOM);
  textSize(16);
  fill(0);
  text("Referencia de 0.0º", x + 5, y + h / 2 - 5);
  //Eje y 
  for (int i3 = 1; i3 <= 5; i3++) {//El paso es de 48
     float posY = y + h / 2 + 48 * i3;
     dibujarLineaDiscontinua(15, posY, w, posY, 16);
     text(-i3+"º", 10, posY); // Etiqueta para las líneas discontinuas negativas

     posY = y + h / 2 - 48 * i3;
     dibujarLineaDiscontinua(15, posY, w, posY, 16);
     text(i3+"º", 10, posY ); // Etiqueta para las líneas discontinuas positivas
  }
    
  
}

void draw_data(){// Funcion que dibuja los valores en la pantalla
  stroke(#0528FC);  
  for(int i=0;i<w-1;i++){
      float y1 = y + h / 2 - data_s_map[i];// Esto es para dibujarlo bonito
      float y2 = y + h / 2 - data_s_map[i + 1];
      line(i, y1, i+1, y2);
  }
}
void add_data(float vals){// Funcion que alamcena los valores que se leen del sensor a +-5.0º
  //Hacemos una interpolacion para almacenar los datos de una forma en la que se pueda representar en la pantalla
  //println(vals);
  vals = constrain(vals, -5.0, 5.0);//Funcion que se asgura qeu los valores esten dentro del rango esperafo
  data_s[i1]=vals;
  data_s_map[i1]=map(vals,-5.0,5.0,-h/2 +10,h/2-10);  
  //println(data_s[i1]);
  i1++;
  if(i1==w){
    i1=0;
  }    
}

boolean mouse_on(int cord_x,int cord_y){
  if(cord_x>=x && cord_x<=x+w && cord_y>=y&& cord_y<=y+h){
    stroke(#FC8F00);
    dibujarLineaDiscontinua(cord_x,y, cord_x, y+h, 8);
    // obtenemos el valor real delsensor alamcenado en el vector sin tranformar
    val_aux=data_s[cord_x];
    return true;
    
  }
  return false;
}
 void dibujarLineaDiscontinua(float x1, float y1, float x2, float y2, float longitudSegmento) {
  float longitudTotal = dist(x1, y1, x2, y2);
  float direccionX = (x2 - x1) / longitudTotal;
  float direccionY = (y2 - y1) / longitudTotal;

  float currentX = x1;
  float currentY = y1;

  boolean dibujar = true;

  while (dist(currentX, currentY, x2, y2) > longitudSegmento / 2) {
    if (dibujar) {
      line(currentX, currentY, currentX + direccionX * longitudSegmento, currentY + direccionY * longitudSegmento);
    }

    currentX += direccionX * longitudSegmento;
    currentY += direccionY * longitudSegmento;

    dibujar = !dibujar;
  }
}
void draw_key(){//Dibujamos la leyenda de sistema
  stroke(0);
  fill(255);
  textSize(16);
  rect(x,y-10,300,-75);
  textAlign(LEFT,CENTER);
  text("Ponga el raton sobre el display",x,y-10-90);
  fill(#0528FC); 
  text("Valor sensor: "+ val_aux,x,y-10-40);//Dibujamos el valor del sensor
  fill(0);
  text("Valor Referencia: "+ refe,x,y-10-60);
  fill(#F200FF);
  text("Valor del error(referencia - sensor): "+ (refe-val_aux) ,x,y-10-20);   
  }
  
  void reset(boolean flag){
    println(flag);
    if(flag==true){
      //Reseteamos los valores almacenados en los vectores
      for(int i2=0;i2<w;i2++){
        data_s[i2]=0.0;
        data_s_map[i2]=0.0;
      } 
      i1=0;
    }
    
  }


}
